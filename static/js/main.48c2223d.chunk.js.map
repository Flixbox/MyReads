{"version":3,"sources":["components/Navigation.js","components/LibraryView.js","BooksAPI.js","components/Book.js","components/BookCollection.js","components/SearchView.js","components/MainView.js","theme.js","components/App.js","serviceWorker.js","index.js"],"names":["Navigation","state","top","left","bottom","right","toggleDrawer","side","open","_this","setState","Object","defineProperty","classes","this","props","react_default","a","createElement","className","root","index_es","position","navBar","variant","color","grow","react_router_dom","to","menuButton","Component","withStyles","flexGrow","marginLeft","marginRight","textDecoration","LibraryView","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","search","query","fetch","concat","method","objectSpread","Content-Type","body","JSON","stringify","then","res","json","data","books","Book","expanded","handleExpandClick","_this$props","title","description","imageLinks","subtitle","card","subheader","media","image","thumbnail","component","actions","disableActionSpacing","classnames","expand","expandOpen","onClick","aria-expanded","aria-label","ExpandMore_default","in","timeout","unmountOnExit","paragraph","theme","maxWidth","height","paddingTop","display","transform","transition","transitions","create","duration","shortest","BookCollection","item","xs","map","book","components_Book","rootContainer","padding","searchField","SearchView","searchString","handleSearch","e","newSearchString","target","value","prevState","length","searchBooks","result","list","container","label","autoFocus","fullWidth","onChange","components_BookCollection","MainView","react_router","exact","path","createMuiTheme","palette","type","typography","useNextVariants","App","styles","CssBaseline_default","components_Navigation","components_MainView","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48c2223d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Button, Toolbar, AppBar, Typography } from '@material-ui/core'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst styles = {\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    },\r\n}\r\n\r\n/**\r\n * This element represents the top navigation of the application.\r\n *  \r\n * @export\r\n * @class Navigation\r\n * @extends {Component}\r\n */\r\nclass Navigation extends Component {\r\n    state = {\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    }\r\n\r\n    toggleDrawer = (side, open) => () => {\r\n        this.setState({\r\n            [side]: open,\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const { classes } = this.props\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar className={classes.navBar}>\r\n                            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n                                MyReads\r\n                            </Typography>\r\n                            <Link to=\"/\" className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Library</Button>\r\n                            </Link>\r\n                            <Link to=\"/search\" className={classes.menuButton}>\r\n                                <Button color=\"inherit\">Search</Button>\r\n                            </Link>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Navigation)","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {  } from '@material-ui/core'\r\n\r\nconst styles = {\r\n\r\n}\r\n\r\n/**\r\n *  This represents the main application next to the navigation component.\r\n *  \r\n * @export\r\n * @class MainView\r\n * @extends {Component}\r\n */\r\nclass LibraryView extends Component {\r\n    render () {\r\n        const { classes } = this.props\r\n\r\n        return (\r\n            <div>\r\n                Library\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(LibraryView)","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Typography, Collapse, IconButton, Card, CardHeader, CardMedia, CardContent, CardActions } from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport classnames from 'classnames'\r\n\r\nconst styles = theme => ({\r\n    card: {\r\n        maxWidth: 400,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    actions: {\r\n        display: 'flex',\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    }\r\n})\r\n\r\n/**\r\n * This represents a single book.\r\n * \r\n * @see https://material-ui.com/demos/cards/\r\n *  \r\n * @export\r\n * @class Book\r\n * @extends {Component}\r\n */\r\nclass Book extends Component {\r\n    state = { expanded: false }\r\n\r\n    handleExpandClick = () => {\r\n        this.setState(state => ({ expanded: !state.expanded }))\r\n    }\r\n    \r\n    render () {\r\n        const { \r\n            classes,\r\n            title,\r\n            description,\r\n            imageLinks,\r\n            subtitle\r\n        } = this.props\r\n\r\n        return (\r\n            <Card className={classes.card}>\r\n                <CardHeader\r\n                    title={title}\r\n                    subheader={subtitle}\r\n                />\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={imageLinks.thumbnail}\r\n                    title=\"Book thumbnail\"\r\n                />\r\n                <CardContent>\r\n                    <Typography component=\"p\">\r\n                        This impressive paella is a perfect party dish and a fun meal to cook together with your\r\n                        guests. Add 1 cup of frozen peas along with the mussels, if you like.\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.actions} disableActionSpacing>\r\n                    <IconButton\r\n                        className={classnames(classes.expand, {\r\n                        [classes.expandOpen]: this.state.expanded,\r\n                        })}\r\n                        onClick={this.handleExpandClick}\r\n                        aria-expanded={this.state.expanded}\r\n                        aria-label=\"Show more\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n                <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n                        <Typography paragraph>\r\n                            {description}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Book)","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nimport Book from './Book'\r\n\r\nconst styles = {\r\n    rootContainer: {\r\n        padding: \"5px\"\r\n    },\r\n    searchField: {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * This represents a number of books, displayed in a single shelf.\r\n * This component must be in a Material UI Container.\r\n *  \r\n * @export\r\n * @class BookCollection\r\n * @extends {Component}\r\n */\r\nclass BookCollection extends Component {\r\n    render () {\r\n        const { classes } = this.props\r\n\r\n        return (\r\n            <Grid item xs={12}>\r\n                {this.props.books.map(book => {\r\n                    return (\r\n                        <Book\r\n                            {...book}\r\n                        />\r\n                    )\r\n                })}\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(BookCollection)","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { TextField, Grid } from '@material-ui/core'\r\nimport { search } from '../BooksAPI'\r\n\r\nimport BookCollection from './BookCollection'\r\n\r\nconst styles = {\r\n    rootContainer: {\r\n        padding: \"5px\"\r\n    },\r\n    searchField: {\r\n\r\n    }\r\n}\r\n\r\n/**\r\n *  This represents the search page. It allows the user to search for books.\r\n *  \r\n * @export\r\n * @class SearchView\r\n * @extends {Component}\r\n */\r\nclass SearchView extends Component {\r\n\r\n    state = {\r\n        searchString: '',\r\n        books: []\r\n    }\r\n\r\n    /**\r\n     * Triggered when the search field is updated.\r\n     * This will fire a new search as long as the search field is filled.\r\n     *\r\n     * @memberof SearchView\r\n     */\r\n    handleSearch = e => {\r\n        const newSearchString = e.target.value\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            searchString: newSearchString\r\n        }))\r\n        if(newSearchString.length) {\r\n            this.searchBooks(newSearchString)\r\n        } else {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                books: []\r\n            }))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method will fire off an API request that searches for books.\r\n     *\r\n     * @memberof SearchView\r\n     */\r\n    searchBooks = searchString => {\r\n        search(searchString).then( result => {\r\n            let list = []\r\n            if(result && result.length) {\r\n                list = result\r\n            }\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                books: list\r\n            }))\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const { classes } = this.props\r\n\r\n        return (\r\n            <Grid container className={classes.rootContainer}>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        label=\"Search\"\r\n                        value={this.state.searchString}\r\n                        className={classes.searchField}\r\n                        autoFocus\r\n                        fullWidth\r\n                        onChange={this.handleSearch}\r\n                    />\r\n                </Grid>\r\n                <BookCollection\r\n                    books={this.state.books}\r\n                />\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SearchView)","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {  } from '@material-ui/core'\r\nimport { Route } from \"react-router-dom\"\r\n\r\nimport LibraryView from \"./LibraryView\"\r\nimport SearchView from \"./SearchView\"\r\n\r\nconst styles = {\r\n\r\n}\r\n\r\n/**\r\n *  This represents the main application next to the navigation component.\r\n *  \r\n * @export\r\n * @class MainView\r\n * @extends {Component}\r\n */\r\nclass MainView extends Component {\r\n    render () {\r\n        const { classes } = this.props\r\n\r\n        return (\r\n            <div>\r\n                <Route exact path=\"/\" component={LibraryView} />\r\n                <Route path=\"/search\" component={SearchView} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MainView)","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n    typography: { useNextVariants: true },\r\n})","import React, { Component } from 'react'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { HashRouter as Router } from \"react-router-dom\"\n\nimport Navigation from './Navigation'\nimport MainView from './MainView'\n\nimport theme from '../theme.js'\n\n/**\n * The main app that contains the entire page.\n * This also contains the theme provider.\n *\n * @class App\n * @extends {Component}\n */\nexport default class App extends Component {\n    render() {\n        return (\n            <div>\n                <MuiThemeProvider theme={theme}>\n                    <CssBaseline />\n                    <Router>\n                        <Navigation/>\n                        <MainView/>\n                    </Router>\n                </MuiThemeProvider>\n            </div>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}